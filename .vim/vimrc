" vim8は次の手順で導入可能
" 1. yum install lua-devel perl-ExtUtils-Embed ruby-devel ncurses-devel python3-devel
" 2. git clone https://github.com/vim/vim
" 3. cd vim
" 4. ./configure --enable-multibyte --with-tlib=ncurses --with-features=huge --enable-python3interp --enable-luainterp --disable-selinux --prefix=$HOME/.local
" 5. make && make install

" シンタックス有効化
syntax reset
syntax on

" UTF-8とする
set encoding=utf-8

" デフォルト設定を読み込む
source $VIMRUNTIME/defaults.vim

" 独自カラースキームを読み込む (~/.vim/colors/syncolor.vim)
let g:colors_name = "syncolor"
colorscheme syncolor

" 256色対応
set t_Co=256

" ファイルタイプ自動検出無効化
filetype off
filetype plugin indent off

" 互換性モード廃止
if &compatible
    set nocompatible
endif

" カーソル、バックスペースキーを通常エディタと同じ操作にする
set backspace=start,eol,indent
set whichwrap=b,s,[,],,~

" 2 byte 文字も正しく表示できるようにする
set ambiwidth=double

" ステータスラインの設定
set laststatus=2
set statusline=%F%r%h%a=all:%L,%P:%l,%c

" vim plugin 有効化する。事前に、vim-plug をインストールする
"   1. curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
"   2. インストール後、:PlugInstallで"Plug"に記載したプラグインをインストールする
"   3. 適当な.goファイルを開き、:LspInstallServer を実行して、Goプラグインをインストールする
" アンインストールする時は、 :LspUninstallServer <plugname> を実行する
" ex) :LspUninstallServer yaml-language-server
call plug#begin('~/.vim/plugged')
" Go Lsp 周りのプラグイン
Plug 'prabirshrestha/async.vim'
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/asyncomplete-lsp.vim'
Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'
Plug 'mattn/vim-goimports'
" Gitプラグイン
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'
" Markdownプラグイン
Plug 'plasticboy/vim-markdown'
call plug#end()

runtime! config/git-plug.vim
runtime! config/go-plug.vim

if expand("%t") =~ ".*\.go"
    " Go言語の場合はハードタブを有効にし、タブ幅を4にする
    set noexpandtab
    set tabstop=4
    set shiftwidth=4
else
    " 上記以外はソフトタブ + タブ幅4とする
    set expandtab
    set tabstop=4
    set shiftwidth=4
endif

filetype plugin indent on

" 行番号を表示する
set number
" 行番号の表示・非表示を切り替えるショートカット
nnoremap <silent> <C-n> :set number!<CR>

" 検索時のハイライトを表示する
set hlsearch
" 検索時のハイライトの表示・非表示を切り替えるショートカット
nnoremap <silent> <C-i> :set hlsearch!<CR>

" F12 でマウス操作の On/Off 切り替え
" On の時は、 Shift 押しながらでコピー&ペースト可能
map <silent> <F12> :let &mouse=(&mouse == "a"?"":"a")<CR>
imap <silent> <F12> :let &mouse=(&mouse == "a"?"":"a")<CR>

" paste/nopaste 設定を"F2"キーで出来るようにする
" また、INSERTモード解除後に自動で nopaste にする
set pastetoggle=<F2>
autocmd InsertLeave * set nopaste

" カーソルラインの設定
set cursorline
set cursorlineopt=number

" マウス操作を起動時は無効にする
set mouse-=a

" 以前開いたことがあるファイルの、カーソル位置へ移動する
augroup vimrcEx
    au BufRead * if line("'\"") > 0 && line("'\"") <= line("$") |
    \ exe "normal g'\"" | endif
augroup END

" ビープ音を消す
set visualbell t_vb=

" viminfoファイルの生成場所を変更する
set viminfo+=n~/.vim/viminfo

" FIXME:, XXX:, TODO:, NOTE: の色
augroup HilightsForce
    autocmd!
    autocmd WinEnter,BufRead,BufNew,Syntax * :silent! call matchadd('Fixme', '\(FIXME\|XXX\):')
    autocmd WinEnter,BufRead,BufNew,Syntax * highlight Fixme ctermfg=White ctermbg=1
    autocmd WinEnter,BufRead,BufNew,Syntax * :silent! call matchadd('Todo', '\(TODO\):')
    autocmd WinEnter,BufRead,BufNew,Syntax * highlight Todo ctermfg=White ctermbg=2
    autocmd WinEnter,BufRead,BufNew,Syntax * :silent! call matchadd('Note', '\(NOTE\):')
    autocmd WinEnter,BufRead,BufNew,Syntax * highlight Note ctermfg=White ctermbg=12
augroup END
